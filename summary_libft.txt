ft_atoi: Recibe un string "str" y devuelve el int del incio de ese string.
ft_bzero: Llena los primeros "n" bytes del área de memoria apuntada por "s" con '\0'.
ft_calloc: Asigna "count"*"size" bytes de memoria, asignándole '\0' y devuelve un puntero al inicio de la asignación.
ft_isalnum: Recibe un carácter "c" (como int) y retorna '1' si es alfanumérico o '0' si no lo es.
ft_isalpha: Recibe un carácter "c" (como int) y retorna '1' si es alfabético o '0' si no lo es.
ft_isascii: Recibe un carácter "c" (como int) y retorna '1' si es de la tabla ASCII de 7 bits o '0' si no lo es.
ft_isdigit: Recibe un carácter "c" (como int) y retorna '1' si es un dígito o '0' si no lo es.
ft_isprint: Recibe un carácter "c" (como int) y retorna '1' si es imprimible o '0' si no lo es
ft_memchr: Busca la última aparición del caracter "c" en "n" bytes desde el área de memoria "s" y retorna un puntero a su posición, si no lo encuentra retorna 'null'.
ft_memcmp: Compara los primeros "n" bytes de dos áreas de meroria "s1" y "s2" y devuelve el resto entre los valores ascii de la primera diferencia encontrada.
ft_memcpy: Copia "n" caracteres del área de memoria "src" al área de memoria "dst".
ft_memmove: Ccopies "len" bytes from string "src" to string "dst". The two strings may overlap; the copy is always done in a non-destructive manner. Returns the original value of "dst".
ft_memset: Llena los primeros "len" bytes del área de memoria apuntada por "b" con el carácter "c" y retorna un puntero a "b".
ft_split: Reserva (utilizando malloc(3)) un array de strings resultante de separar la string "s" en substrings utilizando el caracter "c" como delimitador. El array debe terminar con un puntero NULL.
ft_strchr: Busca la primera aparición del caracter "c" en un string "s" y retorna un puntero a su posición, si no lo encuentra retrona 'null'.
ft_strdup: Recibe un string "s1" y lo duplica asignando la memoria necesaria.
ft_strjoin: Reserva (con malloc(3)) y devuelve una nueva string, formada por la concatenación de "s1" y "s2".
ft_strlcat: Concatena "dstsize" caracteres de un string "dst" al final de un string "src", dejando el resultado en el string "dst" y siendo el último carácter siempre un '\0'.
ft_strlcpy: Copia "dstsize" caracteres de un string "src" sobre un string "dst", siendo el último carácter siempre un '\0'.
ft_strlen: Recibe un string "s" y retorna su número de elementos sin contar el '\0' final.
ft_strncmp: Compara los primeros "n" caracteres de dos strings "s1" y "s2" y devuelve el resto entre los valores ascii de la primera diferencia encontrada.
ft_strnstr: Busca la primera aparición del string "needle" en el string "haystack", buscando como máximo "len" caracteres.
ft_strrchr: Busca la última aparición del caracter "c" en un string "s" y retorna un puntero a su posición, si no lo encuentra retorna 'null'.
ft_strtrim: Elimina todos los caracteres de la string "set" desde el principio y desde el final de "s1", hasta encontrar un caracter no perteneciente a "set". La string resultante se devuelve con una reserva de malloc(3)
ft_substr: Reserva (con malloc(3)) y devuelve una substring de la string "s". La substring empieza desde el índice "start" y tiene una longitud máxima "len".
ft_tolower: Recibe un carácter "c" (como int) y retorna el caráceter en minúscula si era mayúscula o el carácter original en cualquier otro caso.
ft_toupper: Recibe un carácter "c" (como int) y retorna el caráceter en mayúscula si era minúscula o el carácter original en cualquier otro caso.




